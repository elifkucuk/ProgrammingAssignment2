load("~/Desktop/Bitirme/INDR 491/2.RData")
inpatientDataNoExit<-NULL
k<-NULL
antibioticRefData<-NULL
kk<-NULL
antibiotic<-NULL
antibioticData<-NULL
save.image("~/3.RData")
inpatient<-inpatientData[, c(3,4,5,6,7)]
View(inpatient)
inpatient<-merge(inpatient, antibiotic_combined, by="EID", all.x = TRUE)
View(inpatient)
save.image("~/4.RData")
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YATISTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
library(data.table)
library(elastic)
library(lubridate)
library(stringi)
library(readstata13)
library(magrittr)
load("~/Desktop/Bitirme/INDR 491/2.RData")
inpatientDataNoExit<-NULL
k<-NULL
kk<-NULL
antibiotic<-NULL
antibioticData<-NULL
inpatient<-inpatientData[, c(3,4,5,6,7)]
save.image("~/Desktop/Bitirme/INDR 491/3.RData")
inpatient<-merge(inpatient, antibiotic_combined, by="EID", all.x = TRUE)
save.image("~/Desktop/Bitirme/INDR 491/4.RData")
library(data.table)
library(elastic)
library(lubridate)
library(stringi)
library(readstata13)
library(magrittr)
connect()
chunk_size <- 1000
for (partition in 1:ceiling(nrow(inpatient) / chunk_size)) {
print(sprintf("processing chunk #%d out of %d", partition, ceiling(nrow(inpatient) / chunk_size)))
start_index <- (partition - 1) * chunk_size + 1
end_index <- min(partition * chunk_size, nrow(inpatient))
lines <- rep("", 2 * (end_index - start_index + 1))
line_index <- 0
for (i in start_index:end_index){
lines[line_index + 1] <- sprintf('{"index": {"_index": "americanhospital", "_type": "Inpatient", "_id": "%s"}}', tolower(rownames(inpatient)[i]))
lines[line_index + 2] <- sprintf('{"Admission": %d , "PatientID": %d,  "Gender": "%s", "AdmissionDate": "%s", "ReleaseDate" : "%s",  "DrugCount": %d,"Drugs": [%s]}',
inpatient[i, "EID"],
inpatient[i, "PID"],
inpatient[i, "GENDER"],
inpatient[i, "YTARIHI"],
inpatient[i, "TTARIHI"],
inpatient[i, "DrugCount"],
inpatient[i, "Drugs"])
line_index <- line_index + 2
}
writeLines(text = lines, con = "chunk_full.json")
docs <- docs_bulk("chunk_full.json", chunk_size = chunk_size)
}
Search(index = "americanhospital",type = "Inpatient", body = '{"_source": ["GENDER"]}', size = 1)
save.image("~/Desktop/Bitirme/INDR 491/5.RData")
View(antibiotic_Index)
View(ingredient_Index)
View(antibiotic_Index)
View(inpatientData)
View(inpatient)
help(runif)
Alkin=[4,6,7,6,7,10]
Pelin=[5,6,7,8,8,2]
Eren=[6,4,6,4,4,3]
Simirna=[5,6,4,7,6,7]
Elif=[7,6,7.5,5,7,7]
Duygu=[6,7,8,9,6,4]
week=[1,2,3,4,5,6]
plot(Alkin,week,type="l",pch=19, col="red",xlim=c(0,6), ylim=c(0,10), xlab="Gun",ylab="Hal" )
Alkin={4,6,7,6,7,10}
Alkin={4 6 7 6 7 10}
Alkin=r(4, 6, 7, 6, 7, 10)
Alkin=rbind(4, 6, 7, 6, 7, 10)
Alkin=rbind(4, 6, 7, 6, 7, 10)
Pelin=rbind(5,6,7,8,8,2)
Eren=rbind(6,4,6,4,4,3)
Simirna=rbind(5,6,4,7,6,7)
Elif=rbind(7,6,7.5,5,7,7)
Duygu=rbind(6,7,8,9,6,4)
week=rbind(1,2,3,4,5,6)
plot(Alkin,week,type="l",pch=19, col="red",xlim=c(0,6), ylim=c(0,10), xlab="Gun",ylab="Hal" )
plot(Alkin,week,type="l",pch=19, col="red", xlab="Gun",ylab="Hal" )
?plot
plot(Alkin,week,type="c",pch=19, col="red", xlab="Gun",ylab="Hal" )
plot(Alkin,week,type="b",pch=19, col="red", xlab="Gun",ylab="Hal" )
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal" )
points(week,Pelin,type="b",pch=19 col="blue")
points(week,Pelin,type="b",pch=19, col="blue")
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=(1,6), ylim=(0,19) )
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19) )
points(week,Pelin,type="b",pch=19, col="blue")
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19) )
points(week,Eren,type="b",pch=19, col="blue")
points(week,Simirna,type="b",pch=19, col="blue")
points(week,Elif,type="b",pch=19, col="blue")
points(week,Duygu,type="b",pch=19, col="blue")
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19) )
?plot
plot(week,Alkin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Alkin" )
plot(week,Eren,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Eren" )
plot(week,Simirna,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Simirna" )
plot(week,Pelin,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Pelin" )
plot(week,Elif,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Elif" )
plot(week,Duygu,type="b",pch=19, col="red", xlab="Gun",ylab="Hal", xlim=c(1,6), ylim=c(0,19), main="Duygu" )
install.packages("KernSmooth R")
install.packages("KernSmooth")
load(KernSmooth)
load(Kernsmooth)
load(kernsmooth)
load(kernsmooth)
library(KernSmooth)
?gl
?gl
?str
setwd("~/Desktop/Coursera/Data Science Specialization/R ")
mean(x)
traceback()
lm(x)
traceback()
library(datasets)
data(iris)
?iris
cmeans<-colMeans(iris, na.rm=TRUE)
cmeans<-colMeans(iris[,"Sepal.Length"], na.rm=TRUE)
cmeans<-mean(iris[,"Sepal.Length"], na.rm=TRUE)
cmeans
head(iris)
?split
vir<-split(iris,iris$Species)
vir
vir<-split(iris,iris$Species, drop=TRUE)
?split
vir
vir[1]
vir[2]
vir[3]
cmeans<-colMeans(vir[3], na.rm=TRUE)
dim(vir[3])
vir[3]
dim(iris)
reshape(vir[3],
length(vir[3])
cmeans<-colMeans(vir[3], na.rm=TRUE)
head(iris)
dim(iris)
reshape(vir[3],
length(vir[3])
cmeans<-colMeans(vir[3], na.rm=TRUE)
head(iris)
dim(iris)
length(vir[3])
vir[3]
dim(vir[[3]])
cmeans<-colMeans(vir[[3]])
cmeans<-colMeans(vir[[3]]$Sepal.Length)
cmeans<-mean(vir[[3]]$Sepal.Length)
cmeans
head(iris)
colMeans(iris)
apply(iris[,1:4],2,mean)
data(mtcars)
head(mtcars)
head(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean, drop=TRUE)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?tapply
sapply(split(mtcars$mpg, mtcars$cyl), mean)
head(mtcars)
?mtcars
split(mtcars$hp, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl,mean)
a<-tapply(mtcars$hp, mtcars$cyl,mean)
dim[a]
dim[[a]]
a[1]
[1,1]
a[1,1]
dim(a)
dim(a[1])
class(a)
a[,1]
reshape(a,2,3)
reshape(a,c(2,3))
a<-tapply(mtcars$hp, mtcars$cyl,mean, simplify = TRUE)
a
a[3-1]
a[3]-a[1]
209.21429 -82.63636
debug(ls)
ls(1)
with(mtcars, tapply(mpg, cyl, mean))
?with
setwd("~/Desktop/Coursera/Data Science Specialization/R /ProgrammingAssignment2")
